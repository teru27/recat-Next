export default function Home() {
  const test = (str: string, Anser: string): boolean | string => {
    let board: number[][] = new Array();
    let count: number = 0;
    let strArr = str.split("/");
    let strArr2: any[] = [];

    for (var i = 0; i < 10; i++) {
      board[i] = new Array();
      for (var j = 0; j < 10; j++) {
        board[i][j] = 0;
      }
    }
    strArr.map((strArr1, index) => {
      strArr2[index] = strArr1.split("-");
    });
    for (var i = 0; i < strArr2.length; i++) {
      let xy = strArr2[i][0].split(",");
      let xy1 = strArr2[i][1].split(",");

      for (var k = 0; k < board.length; k++) {
        for (var j = 0; j < board[k].length; j++) {
          if (xy[1] <= k && xy1[1] >= k && xy[0] <= j && xy1[0] >= j) {
            board[k][j] = board[k][j] + 1;
          }
          if (i == strArr2.length - 1 && board[k][j] == 2) {
            count++;
          }
        }
      }
    }
    console.log(`${count}` === Anser ? true : count + "=" + Anser);
    return `${count}` === Anser ? true : count + "=" + Anser;
  };

  /*0*/ test("5,1-7,9/3,2-8,6/0,5-9,5", "15");
  /*1*/ test("0,0-9,9/0,0-9,9/0,0-9,9", "0");
  /*2*/ test("0,0-9,9/0,0-0,9/1,0-9,9", "100");
  /*3*/ test("2,5-7,6/0,5-7,7/2,0-8,6", "0");
  /*4*/ test("1,9-4,9/4,9-7,9/0,3-7,4", "1");
  /*5*/ test("6,1-6,9/5,0-7,4/5,1-7,2", "6");
  /*6*/ test("4,0-9,8/5,1-6,8/0,2-9,7", "28");
  /*7*/ test("2,8-8,9/7,9-8,9/8,3-8,9", "2");
  /*8*/ test("3,3-9,4/0,1-8,4/1,2-8,9", "12");
  /*9*/ test("2,1-8,3/0,1-3,7/8,3-8,4", "7");
  /*10*/ test("5,4-6,9/0,0-6,0/5,3-9,8", "10");
  /*11*/ test("1,1-9,7/1,1-3,8/3,8-7,9", "22");
  /*12*/ test("2,4-6,7/3,2-7,8/1,0-9,4", "24");
  /*13*/ test("0,2-1,5/8,1-8,3/1,8-6,8", "0");
  /*14*/ test("5,2-9,5/9,1-9,2/8,0-8,6", "5");
  /*15*/ test("5,0-6,4/2,1-6,4/3,8-3,9", "8");
  /*16*/ test("0,4-6,9/4,1-6,9/7,6-9,7", "18");
  /*17*/ test("0,0-5,5/0,1-2,8/5,3-9,4", "17");
  /*18*/ test("0,2-5,6/5,6-8,7/0,1-2,6", "16");
  /*19*/ test("7,2-8,4/1,0-6,8/1,3-7,6", "26");
  /*20*/ test("4,3-9,3/0,0-6,5/0,0-4,8", "31");
  /*21*/ test("3,4-4,6/2,2-4,8/2,0-8,4", "11");
  /*22*/ test("1,2-6,5/0,5-4,7/2,8-2,9", "4");
  /*23*/ test("4,1-7,5/2,1-9,9/1,7-2,9", "23");
  /*24*/ test("1,6-5,6/0,3-5,7/0,2-2,6", "13");
  /*25*/ test("1,3-3,4/1,4-3,4/9,2-9,9", "3");
  /*26*/ test("6,3-7,6/2,2-2,3/1,3-9,8", "9");
  /*27*/ test("2,2-9,7/1,8-9,8/2,2-8,9", "49");
  /*28*/ test("1,2-6,9/7,6-9,9/4,3-9,9", "33");
  /*29*/ test("6,0-7,5/0,4-3,8/1,4-5,8", "15");
  /*30*/ test("2,0-9,7/0,5-3,8/5,1-7,7", "27");
  /*31*/ test("1,2-8,7/3,1-4,3/2,3-5,8", "20");
  /*32*/ test("1,0-7,7/0,1-5,4/0,0-2,3", "19");
  /*33*/ test("2,0-3,7/1,1-3,7/5,3-5,9", "14");
  /*34*/ test("7,2-9,8/1,0-6,8/0,2-9,9", "63");
  /*35*/ test("1,1-5,3/0,3-8,7/2,3-8,7", "32");
  /*36*/ test("3,4-6,6/1,0-9,1/4,0-9,9", "21");
  /*37*/ test("0,0-4,7/0,5-5,9/0,2-4,5", "25");
  /*38*/ test("1,1-9,9/2,2-7,4/2,4-7,7", "30");
  /*39*/ test("3,2-9,9/2,0-6,6/0,5-8,9", "36");
  /*40*/ test("0,1-8,8/0,5-9,8/2,3-2,4", "38");
  /*41*/ test("0,0-8,6/4,3-9,9/7,1-9,9", "29");
  /*42*/ test("0,0-8,8/2,4-9,8/0,1-9,2", "53");
  return <div></div>;
}
